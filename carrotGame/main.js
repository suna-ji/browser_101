const clientX = document.documentElement.clientWidth;
const clientY = document.documentElement.clientHeight;

const playBtn = document.querySelector('.playBtn');
const carrots__ul = document.querySelector('.carrots__ul');
const bugs__ul = document.querySelector('.bugs__ul');




// Í∞Å posX, posYÎ•º Í∞ÄÏßÑ ÎãπÍ∑º 10Í∞ú, Î≤åÎ†à 10Í∞ú Î¶¨Ïä§Ìä∏ ÎßåÎì§Ïñ¥ÏÑú readyÏóê ÏãúÏûëÌïòÏûêÏûê ÌôîÎ©¥Ïóê ÎûúÎç§ÌïòÍ≤å ÎøåÎ†§Ï£ºÍ∏∞ (ÏôÑÎ£å)
// querySelectorAllÎ°ú ul ÏïÑÎûòÏóê ÏûàÎäî Î™®Îì† liÍ∞ÄÏ†∏Ïò®Îã§Ïùå mapÏúºÎ°ú ÌïòÎÇòÏî© translateÌïòÎäîÍ≤å Îçî Ìö®Ïú®Ï†ÅÏùºÍπå? Î∞©Î≤ï1 
// ÏïÑÎãàÎ©¥, dataÏùò posx posy Î•º Î∞îÍæ∏Í≥† liÏãπ ÏßÄÏö∞Í≥† displayÌïòÎäîÎç∞ Îçî Ìö®Ïú®Ï†ÅÏùºÍπå Î∞©Î≤ï2
// 2Î≤àÏù¥ Îçî Ï¢ãÏùÑ Í≤É Í∞ôÏùå 
// 2Í∞ÄÏßÄ Î∞©Î≤ïÏúºÎ°ú Íµ¨ÌòÑÌïòÍ≥† ÏÑ±Îä• ÌÖåÏä§Ìä∏ Ìï¥Î≥¥Í∏∞ üí°




playBtn.addEventListener('click', (event) => {

    const carrots__li = document.querySelectorAll('.carrot');
    const bugs__li = document.querySelectorAll('.bug');
    carrots__li.forEach(
        function(currentValue) {
            // console.log(currentValue);
            setPositioning(currentValue, 'carrot');
        }
    )
    bugs__li.forEach(
        function(currentValue) {
            setPositioning(currentValue, 'bug');
        }
    )
});
   
function setPositioning(item, itemType){
    const itemRect = item.getBoundingClientRect();
    let itemWidth, itemHeight;

    if(itemType === 'carrot'){
        itemWidth = 80;
        itemHeight = 80;
    }else if(itemType === 'bug'){
        itemWidth = 50;
        itemHeight = 50;
    }

    // posXÏùò Î≤îÏúÑ: -oldX <= newX <= (clientWidth - oldX - carrotWidth)
    // posYÏùò Î≤îÏúÑ: -oldY <= newY <= (clientHeight - oldY - carrotHeight)
    // ÌïúÎ≤à ÏòÆÍ≤®ÏßÑ ÏúÑÏπòÍ∞Ä ÏïÑÎãàÎùº Îß® Ï≤òÏùå Î°úÎìúÎêú ÏúÑÏπòÎ•º Í∏∞Ï§ÄÏúºÎ°ú translateÎêòÍ≥† ÏûàÎã§. ÏôúÏßÄ???? Í∑∏ÎûòÏÑú Îß® Ï≤òÏùå Î°úÎìúÌï† Îïå dataÎ°ú ÎÑ£Ïñ¥Ï§òÏïºÌïòÎäîÎç∞ Ïù¥Í≤å ÎßûÎÇò..
    const dataset = item.dataset;
    // console.log(dataset);
    const oldXString = dataset.oldx;
    const oldXArray = oldXString.split('px');
    const oldX = oldXArray[0];
    const oldYString = dataset.oldy;
    const oldYArray = oldYString.split('px');
    const oldY = oldYArray[0];
    console.log(`oldX -> ${oldX} oldY -> ${oldY}`);
    var newX = getRandomPosition(-oldX, clientX - oldX - itemWidth);
    var newY = getRandomPosition(-oldY, clientY - oldY - itemHeight);
    item.style.transform = `translate(${newX}px, ${newY}px)`;
}

function getRandomPosition(min, max) {
    return Math.random() * (max - min) + min;
}

function createCarrotHTMLString(carrot){
    return `
        <li class="carrot" style = "transform: translate(${carrot.posX}, ${carrot.posY})" data-oldx = "${carrot.posX}" data-oldy = "${carrot.posY}">
            <button class="carrot__btn">
                <img src="img/carrot.png" alt="carrot_img">
            </button>
        </li>
    `;
}

function createBugHTMLString(bug){
    return `
        <li class="bug" style = "transform: translate(${bug.posX}, ${bug.posY})" data-oldX = "${bug.posX}" data-oldY = "${bug.posY}">
            <button class="bug__btn">
                <img src="img/bug.png" alt="bug_img">
            </button>
        </li>
    `;
}

function displayCarrots(carrots){
    carrots__ul.innerHTML = carrots.map(carrot => createCarrotHTMLString(carrot)).join('');
}

function displayBugs(bugs){
    bugs__ul.innerHTML = bugs.map(bug => createBugHTMLString(bug)).join('');
}


// Fetch the items from the JSON file
function loadItems() {
    return fetch('data/items.json')
        .then(response => response.json())
}

// jsonÌååÏùºÏùÑ ÎèôÏ†ÅÏúºÎ°ú Î∂àÎü¨ÏôÄÏïºÌï® -> ÏãúÍ∞ÑÏù¥ Í±∏Î¶º -> promiseÎ¶¨ÌÑ¥
loadItems()
    .then(json => {
        displayCarrots(json.carrots);
        displayBugs(json.bugs);
        // setEventListeners(carrots);
    })